# O. И снова Вася

# Ограничение времени	1 секунда
# Ограничение памяти	64Mb
# Ввод	стандартный ввод или input.txt
# Вывод	стандартный вывод или output.txt

# Тимофей собирает метрики посещаемости сайта за последний месяц с двух серверов. 
# На каждой машине имеется список id пользователей, отсортированный в порядке от минимального количества посещений к максимальному, 
# вам известно число посещений каждого пользователя. Пользователи, не посещавшие сайт в последний месяц, не учитываются. 
# ам нужно сделать общий список числа посещений для двух серверов так, чтобы в нем тоже числа шли по возрастанию. 
# Так как сайт Тимофея очень популярен, то данных о пользователях много, поэтому Тимофей может позволить себе только линейное время работы алгоритма.

# Формат ввода
# В первой строке записаны количества посещений пользователей с первого сервера через пробел, в конце - k нулей. 
# Во второй строке записано число m - количество пользователей, пришедших с первого сервера (без учета нулей в конце списка). 
# В третьей - число k - которое, помимо количества нулей, также является длиной списка пользователей со второго сервера. 
# В последней строке - список посещений со второго сервера (k штук).

# Количество посещений каждого пользователя не превосходит 10000, числа m и k также не превосходят 10000

# Формат вывода
# В одной строке через пробел выведите элементы получившегося списка в отсортированном порядке.

# Пример 1
# Ввод	Вывод
# 1 2 3 0 0 0
# 3
# 3
# 2 5 6
# 1 2 2 3 5 6
# Пример 2
# Ввод	Вывод
# 8 98 0
# 2
# 1
# 65
# 8 65 98
# Примечания
# Дополнительную память использовать нельзя, все id нужно сохранять в первом массиве.


list1_map = map(int, input().split())
list1 = list(list1_map)

m = int(input())
k = int(input())

list2_map = map(int, input().split())
list2 = list(list2_map)

res = sorted(list1 + list2)
res_no_zero = [i for i in res if i != 0]

print(" ".join(map(str, res_no_zero)))